{"version":3,"sources":["containers/Header.js","redux/constants/action-types.js","containers/ProductComponent.js","containers/ProductListing.js","redux/actions/productAction.js","containers/ProductDetail.js","App.js","redux/reducers/productReducer.js","redux/reducers/cartReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Header","cartItems","useSelector","state","cart","items","showCart","setShowCart","useState","dispatch","useDispatch","totalItems","reduce","acc","item","quantity","React","createElement","className","style","padding","display","justifyContent","alignItems","width","height","href","color","textDecoration","position","cursor","marginTop","onClick","top","right","background","borderRadius","fontSize","border","boxShadow","zIndex","marginBottom","length","listStyle","margin","map","key","productId","image","src","alt","title","objectFit","marginRight","concat","e","stopPropagation","type","payload","marginLeft","ActionTypes","ProductComponent","renderList","allProducts","products","product","id","price","category","Link","to","ProductListing","fetchProducts","useCallback","async","response","axios","get","setProducts","data","err","console","log","useEffect","ProductDetails","description","useParams","selectedProduct","fetchProductDetail","Object","keys","textTransform","backgroundColor","tabIndex","App","Router","Routes","Route","path","element","initialState","rootReducer","combineReducers","arguments","undefined","action","_objectSpread","find","filter","persistedState","loadState","serializedState","localStorage","getItem","JSON","parse","warn","store","configureStore","reducer","preloadedState","devTools","subscribe","stringify","setItem","saveState","getState","ReactDOM","createRoot","document","getElementById","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.f98a0758.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nconst Header = () => {\r\n    const cartItems = useSelector((state) => state.cart.items);\r\n    const [showCart, setShowCart] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const totalItems = cartItems.reduce((acc, item) => acc + item.quantity, 0);\r\n\r\n    return (\r\n        <div className=\"ui fixed menu\" style={{ padding: \"0 20px\" }}>\r\n            <div\r\n                className=\"ui container center\"\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    width: \"100%\",\r\n                    height: \"60px\"\r\n                }}\r\n            >\r\n                <h2>\r\n                    <a href=\"/\" style={{ color: \"inherit\", textDecoration: \"none\" }}>\r\n                        FakeShop — practicing with Redux store. Cart state is stored in localStorage 🎯\r\n                    </a>\r\n                </h2>\r\n\r\n                <div\r\n                    style={{\r\n                        position: \"relative\",\r\n                        cursor: \"pointer\",\r\n                        marginTop: \"10px\" // 👈 ниже иконка корзины\r\n                    }}\r\n                    onClick={() => setShowCart(!showCart)}\r\n                >\r\n                    <i className=\"shopping cart icon large\"></i>\r\n\r\n                    {totalItems > 0 && (\r\n                        <div\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                top: \"-5px\",\r\n                                right: \"-10px\",\r\n                                background: \"red\",\r\n                                color: \"white\",\r\n                                borderRadius: \"50%\",\r\n                                padding: \"4px 7px\",\r\n                                fontSize: \"12px\"\r\n                            }}\r\n                        >\r\n                            {totalItems}\r\n                        </div>\r\n                    )}\r\n\r\n                    {showCart && (\r\n                        <div\r\n                            style={{\r\n                                position: \"absolute\",\r\n                                top: \"40px\",\r\n                                right: 0,\r\n                                width: \"300px\",\r\n                                background: \"white\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: \"4px\",\r\n                                padding: \"10px\",\r\n                                boxShadow: \"0 2px 10px rgba(0,0,0,0.2)\",\r\n                                zIndex: 10\r\n                            }}\r\n                        >\r\n                            <h4 style={{ marginBottom: \"10px\" }}>Cart:</h4>\r\n                            {cartItems.length === 0 ? (\r\n                                <p>Empty</p>\r\n                            ) : (\r\n                                <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\r\n                                    {cartItems.map(item => (\r\n                                        <li\r\n                                            key={item.productId}\r\n                                            style={{\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n                                                marginBottom: \"10px\",\r\n                                                justifyContent: \"space-between\"\r\n                                            }}\r\n                                        >\r\n                                            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                                                {item.image && (\r\n                                                    <img\r\n                                                        src={item.image}\r\n                                                        alt={item.title || \"product\"}\r\n                                                        style={{\r\n                                                            width: \"40px\",\r\n                                                            height: \"40px\",\r\n                                                            objectFit: \"contain\",\r\n                                                            marginRight: \"10px\",\r\n                                                            border: \"1px solid #eee\",\r\n                                                            borderRadius: \"4px\"\r\n                                                        }}\r\n                                                    />\r\n                                                )}\r\n                                                <span style={{ fontSize: \"14px\" }}>\r\n                                                    {item.title || `Product ID ${item.productId}`} — {item.quantity} шт.\r\n                                                </span>\r\n                                            </div>\r\n\r\n                                            <button\r\n                                                onClick={(e) => {\r\n                                                    e.stopPropagation();\r\n                                                    dispatch({ type: \"REMOVE_FROM_CART\", payload: { productId: item.productId } });\r\n                                                }}\r\n                                                style={{\r\n                                                    background: \"transparent\",\r\n                                                    border: \"none\",\r\n                                                    color: \"#999\",\r\n                                                    fontSize: \"16px\",\r\n                                                    cursor: \"pointer\",\r\n                                                    marginLeft: \"10px\"\r\n                                                }}\r\n                                                title=\"Удалить\"\r\n                                            >\r\n                                                &times;\r\n                                            </button>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","export const ActionTypes = {\r\n    SET_PRODUCTS: 'SET_PRODUCTS',\r\n    SELECTED_PRODUCT: 'SELECTED_PRODUCT',\r\n    REMOVE_SELECTED_PRODUCT: 'REMOVE_SELECTED_PRODUCT',\r\n};","import React from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProductComponent = () => {\r\n    const products = useSelector((state) => state.allProducts.products);\r\n\r\n    const renderList = products.map((product) => {\r\n        const { id, title, image, price, category } = product;\r\n        return (\r\n\r\n            <div className=\"card\" key={id}>\r\n                <Link to={`/product/${id}`} className=\"ui link\">\r\n                    <div className=\"image ui \">\r\n                        <img src={image} alt={title} />\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"header\">{title}</div>\r\n                        <div className=\"meta price\">$ {price}</div>\r\n                        <div className=\"meta\">{category}</div>\r\n                    </div>\r\n                </Link>\r\n\r\n            </div >\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"ui four stackable cards\" style={{ marginTop: \"30px\" }}>\r\n            {renderList}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductComponent;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setProducts } from \"../redux/actions/productAction\";\r\nimport ProductComponent from \"./ProductComponent\";\r\n\r\nconst ProductListing = () => {\r\n    const products = useSelector((state) => state.allProducts); // исправил доступ\r\n    const dispatch = useDispatch();\r\n\r\n    const fetchProducts = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(\"https://fakestoreapi.com/products\");\r\n            dispatch(setProducts(response.data));\r\n        } catch (err) {\r\n            console.log(\"Err\", err);\r\n        }\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, [fetchProducts]);\r\n\r\n\r\n    return (\r\n        <div className=\"ui grid container\" style={{ marginTop: \"30px\" }}>\r\n            <ProductComponent />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductListing;\r\n","import { ActionTypes } from \"../constants/action-types\";\r\nexport const setProducts = (products) => {\r\n    return {\r\n        type: ActionTypes.SET_PRODUCTS,\r\n        payload: products,\r\n    };\r\n};\r\n\r\nexport const selectedProduct = (product) => {\r\n    return {\r\n        type: ActionTypes.SELECTED_PRODUCT,\r\n        payload: product,\r\n    };\r\n};\r\n\r\n\r\nexport const removeSelectedProduct = (product) => {\r\n    return {\r\n        type: ActionTypes.REMOVE_SELECTED_PRODUCT,\r\n    };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { selectedProduct, removeSelectedProduct } from \"../redux/actions/productAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst ProductDetails = () => {\r\n    const product = useSelector((state) => state.product);\r\n    const { image, title, price, category, description } = product;\r\n    const { productId } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const fetchProductDetail = async () => {\r\n            try {\r\n                const response = await axios.get(`https://fakestoreapi.com/products/${productId}`);\r\n                dispatch(selectedProduct(response.data));\r\n            } catch (err) {\r\n                console.log(\"Error\", err);\r\n            }\r\n        };\r\n\r\n        if (productId && productId !== \"\") {\r\n            fetchProductDetail();\r\n        }\r\n\r\n        return () => {\r\n            dispatch(removeSelectedProduct());\r\n        };\r\n    }, [productId, dispatch]);\r\n\r\n    const handleAddToCart = () => {\r\n        dispatch({\r\n            type: \"ADD_TO_CART\",\r\n            payload: {\r\n                productId: product.id,\r\n                title: product.title,\r\n                image: product.image\r\n            }\r\n        });\r\n    };\r\n    return (\r\n        <div className=\"ui grid container\" style={{ marginTop: \"30px\" }}>\r\n            {Object.keys(product).length === 0 ? (\r\n                <div>Loading...</div>\r\n            ) : (\r\n                <div className=\"ui placeholder segment\">\r\n                    <div className=\"ui two column stackable center aligned grid\">\r\n                        <div className=\"ui vertical divider\"></div>\r\n                        <div className=\"middle aligned row\">\r\n                            <div className=\"column lp\">\r\n                                <img className=\"ui fluid image\" src={image} alt={title} />\r\n                            </div>\r\n                            <div className=\"column rp\">\r\n                                <h1>{title}</h1>\r\n                                <h2>\r\n                                    <a className=\"ui teal tag label\">${price}</a>\r\n                                </h2>\r\n                                <h3\r\n                                    style={{\r\n                                        textTransform: \"uppercase\",\r\n                                        padding: 20,\r\n                                        border: \"2px solid brown\",\r\n                                        backgroundColor: \"#a2a0a03b\",\r\n                                    }}\r\n                                    className=\"ui brown block\"\r\n                                >\r\n                                    {category}\r\n                                </h3>\r\n                                <p>{description}</p>\r\n                                <div\r\n                                    className=\"ui vertical animated button\"\r\n                                    tabIndex=\"0\"\r\n                                    onClick={() => handleAddToCart(product.id)}\r\n                                >\r\n                                    <div className=\"hidden content\">\r\n                                        <i className=\"shop icon\"></i>\r\n                                    </div>\r\n                                    <div className=\"visible content\">Add to Cart</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetails;\r\n","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\nimport Header from './containers/Header';\nimport ProductListing from './containers/ProductListing';\nimport ProductDetails from './containers/ProductDetail';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<ProductListing />} />\n          <Route path=\"/product/:productId\" element={<ProductDetails />} />\n          <Route path=\"*\" element={<h2>404 Not Found</h2>} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ActionTypes } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n    products: [\r\n\r\n    ]\r\n}\r\nexport const productReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ActionTypes.SET_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                products: payload,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const selectedProductReducer = (state = {}, { type, payload }) => {\r\n    switch (type) {\r\n        case ActionTypes.SELECTED_PRODUCT:\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n            };\r\n        case ActionTypes.REMOVE_SELECTED_PRODUCT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\n\r\n\r\nconst initialState = {\r\n    items: [] //  { productId, quantity }\r\n};\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TO_CART\":\r\n            const existingItem = state.items.find(item => item.productId === action.payload.productId);\r\n            if (existingItem) {\r\n                // если товар уже есть — увеличить количество\r\n                return {\r\n                    ...state,\r\n                    items: state.items.map(item =>\r\n                        item.productId === action.payload.productId\r\n                            ? { ...item, quantity: item.quantity + 1 }\r\n                            : item\r\n                    )\r\n                };\r\n            } else {\r\n                // иначе добавить новый товар\r\n                return {\r\n                    ...state,\r\n                    items: [\r\n                        ...state.items,\r\n                        {\r\n                            productId: action.payload.productId,\r\n                            quantity: 1,\r\n                            image: action.payload.image,\r\n                            title: action.payload.title\r\n                        }\r\n                    ]\r\n                };\r\n            }\r\n\r\n        case \"REMOVE_FROM_CART\":\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(item => item.productId !== action.payload.productId)\r\n            };\r\n\r\n        case \"CLEAR_CART\":\r\n            return {\r\n                ...state,\r\n                items: []\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { productReducer, selectedProductReducer } from './productReducer';\r\nimport { cartReducer } from \"./cartReducer\";\r\nconst rootReducer = combineReducers({\r\n    allProducts: productReducer,\r\n    product: selectedProductReducer,\r\n    cart: cartReducer,\r\n});\r\n\r\nexport default rootReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from './reducers';\r\n\r\n//  localStorage\r\nconst loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem(\"cart\");\r\n        if (serializedState === null) return undefined;\r\n        return { cart: JSON.parse(serializedState) };\r\n    } catch (e) {\r\n        console.warn(\"loadState error\", e);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n//  localStorage\r\nconst saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state.cart);\r\n        localStorage.setItem(\"cart\", serializedState);\r\n    } catch (e) {\r\n        console.warn(\"saveState error\", e);\r\n    }\r\n};\r\n\r\nconst persistedState = loadState();\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    preloadedState: persistedState,\r\n    devTools: true\r\n});\r\n\r\n// подписка на обновление\r\nstore.subscribe(() => {\r\n    saveState(store.getState());\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport store from './redux/store'\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}